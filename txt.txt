<template>
    <div class="page">
      <div class="navbar">
        <div class="navbar-bg"></div>
        <div class="navbar-inner sliding">
          <div class="title">Virtual List</div>
          <div class="subnavbar">
            <form data-search-container=".virtual-list" data-search-item="li" data-search-in=".item-title"
              class="searchbar searchbar-init">
              <div class="searchbar-inner">
                <div class="searchbar-input-wrap">
                  <input type="search" placeholder="Search" />
                  <i class="searchbar-icon"></i>
                  <span class="input-clear-button"></span>
                </div>
                <span class="searchbar-disable-button if-not-aurora">Cancel</span>
              </div>
            </form>
          </div>
        </div>
      </div>
      <div class="searchbar-backdrop"></div>
      <div class="page-content">
        <div class="list simple-list searchbar-not-found">
          <ul>
            <li>Nothing found</li>
          </ul>
        </div>
        <div class="list virtual-list media-list searchbar-found"></div>
      </div>
    </div>
  </template>
  <script>
    import Framework7 from 'framework7/bundle';
    export default (props, { $f7, $el, $theme, $on }) => {
      $on('pageInit', () => {
        Framework7.request.get('https://zelda.fanapis.com/api/games?limit=10').then((res) => {
            const   items = []
            let jsonResult = JSON.parse(res.data).data

            jsonResult.forEach(element => {
                items.push({
                    title: element.name,
                    subtitle: element.description
                })
            });

            const virtualList = $f7.virtualList.create({
            // List Element
            
            el: $el.value.find('.virtual-list'),
            // Pass array with items
            items,
            // Custom search function for searchbar
            searchAll: function (query, items) {
                var found = [];
                for (var i = 0; i < items.length; i++) {
                if (items[i].title.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);
                }
                return found; //return array with mathced indexes
            },
            // List item render
            renderItem(item) {
                return `
                <li>
                <a href="#" class="item-link item-content">
                    <div class="item-inner">
                    <div class="item-title-row">
                        <div class="item-title">${item.title}</div>
                    </div>
                    <div class="item-subtitle">${item.subtitle}</div>
                    </div>
                </a>
                </li>`;
            },
            // Item height
            height: $theme.ios ? 63 : ($theme.md ? 73 : 77),
            });
        });
        
      });
  
      return $render;
    }
  </script>